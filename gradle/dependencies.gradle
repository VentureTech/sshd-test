import org.ajoberstar.grgit.Grgit


compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:all,-deprecation,-processing'
    options.compilerArgs << '-parameters'
    options.incremental = true
}
compileTestJava { options.incremental = true }


dependencies {
    compile 'org.apache.sshd:sshd-core:1.4+'
    compile 'ch.qos.logback:logback-classic:1.1.8'
}

task createDependencyFile() {
    group = 'Build'
    doFirst {
        def dependencyFile = file("dependencies.txt")
        def pw = dependencyFile.newPrintWriter()
        configurations.all.collect {it.resolvedConfiguration.getResolvedArtifacts()}.flatten().collect {it.moduleVersion.id}.
            unique().sort(false){"${it.group}:${it.name}"}forEach{
                pw.println(it)
            }
        pw.close()
        try{
            def root = file('../.git').exists() ? file('..') : file('.')
            def grgit = Grgit.open(root)
            def path = root == project.rootDir ? dependencyFile.name : "${project.rootDir.name}/${dependencyFile.name}"
            if(isIDEA)
                grgit.add(patterns: [path] as Set, update: false)
            else
                grgit.commit(message: 'Updating dependencies.txt', paths: [path] as Set)

        }catch(ignore){
            if(!ignore.message.toLowerCase().contains("no changes"))
                ignore.printStackTrace()
        }
    }
}
if(isIDEA) {
    afterEvaluate {
        createDependencyFile.execute()
    }
}